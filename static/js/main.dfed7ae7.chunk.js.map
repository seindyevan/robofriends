{"version":3,"sources":["components/SearchBox.js","components/CardList.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","searchfield","searchChange","className","type","placeholder","onChange","CardList","robots","Error","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","useState","setRobots","searchField","setSearchField","useEffect","fetch","then","response","json","users","filteredRobots","filter","r","name","toLowerCase","includes","length","e","currentTarget","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAceA,EAZG,SAAC,GAA+B,EAA9BC,YAA+B,IAAlBC,EAAiB,EAAjBA,aAC7B,OACI,qBAAKC,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVC,KAAK,SACLC,YAAY,gBACZC,SAAUJ,OCgBXK,EAtBE,SAAC,GAAa,EAAZC,OAEX,MAAM,IAAIC,MAAM,WCKTC,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,Y,oCCqBJC,E,kDAvBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHA,E,qDAQlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CACVJ,UAAU,M,oBAIlB,WACI,OAAGG,KAAKJ,MAAMC,SACH,4DAEJG,KAAKX,MAAMK,a,GAnBEQ,aC4CbC,MAtCf,WACI,MAA4BC,mBAAS,IAArC,mBAAOlB,EAAP,KAAemB,EAAf,KACA,EAAsCD,mBAAS,IAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KAEAC,qBAAU,WACNC,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAIR,EAAUQ,QAC9B,IAGH,IAIMC,EAAiB5B,EAAO6B,QAAO,SAAAC,GACjC,OAAOA,EAAEC,KAAKC,cAAcC,SAASb,EAAYY,kBAIvD,OAAQhC,EAAOkC,OAGT,sBAAKvC,UAAU,KAAf,UACI,6CACA,cAAC,EAAD,CAAWD,aAdI,SAACyC,GACpBd,EAAec,EAAEC,cAAcC,UAc3B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUrC,OAAQ4B,WARZ,0CChBXU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dfed7ae7.chunk.js","sourcesContent":["import React from 'react';\n\nconst SearchBox = ({searchfield, searchChange}) =>{\n    return (\n        <div className='pa2'>\n            <input \n                className='pa3 ba b--green bg-lightest-blue'\n                type='search' \n                placeholder='search robots'\n                onChange={searchChange}/>\n        </div>\n    )\n}\n\nexport default SearchBox;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n    if(true){\n        throw new Error('NOOOOO');\n    }\n\n    return(\n        <div>\n            {\n                robots.map((user, i) => {\n                    return (\n                        <Card \n                            key={i}\n                            id={user.id} \n                            name={user.name}  \n                            mail={user.email}/>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default CardList;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY: 'scroll', border: '5px solid black', height: '500px'}}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError: false\n        };\n    }\n    \n\n    componentDidCatch(error, info){\n        this.setState({\n            hasError: true\n        });\n    }\n\n    render(){\n        if(this.state.hasError){\n            return <h1>Oooops... this is not good</h1>\n        } \n        return this.props.children;\n    }\n}\n\n\nexport default ErrorBoundary;","import React, {useState, useEffect} from 'react';\n//import { robots_data } from '../robots';\nimport SearchBox from '../components/SearchBox';\nimport CardList from '../components/CardList';\nimport Scroll from '../components/Scroll';\nimport './App.css';\nimport ErrorBoundary from '../components/ErrorBoundary'\n\nfunction App(){\n    const [robots, setRobots] = useState([]);\n    const [searchField, setSearchField] = useState('');\n\n    useEffect(() => {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => setRobots(users))\n    }, []);\n\n\n    const onSearchChange = (e) => {\n        setSearchField(e.currentTarget.value);\n    }\n\n    const filteredRobots = robots.filter(r => {\n        return r.name.toLowerCase().includes(searchField.toLowerCase())\n    });\n\n\n  return !robots.length ? <h1>Loading</h1> :\n    (\n    \n        <div className='tc'>\n            <h1>RoboFriends</h1>\n            <SearchBox searchChange={onSearchChange}/>\n            <Scroll>\n                <ErrorBoundary>\n                    <CardList robots={filteredRobots}/>\n                </ErrorBoundary>\n            </Scroll>\n        </div>\n        \n    )\n    \n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}